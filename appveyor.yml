version: '{build}'

image:
  - macos
  - Ubuntu2004

configuration: Release

platform:
  - x64


for:
-
  matrix:
    only:
      - image: macos
  install:
    - curl -Ls https://micromamba.snakepit.net/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
    - mv bin/micromamba ./micromamba
-
  matrix:
    only:
      - image: Ubuntu2004
  install:
    - wget -qO- https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba --strip-components=1

build_script:
  - ./micromamba shell init -s bash -p ~/micromamba
  - source ~/.bashrc
  - source ~/.bash_profile
  - hash -r
  - mkdir -p ~/micromamba/pkgs/
  - export MAMBA_ROOT_PREFIX=~/micromamba
  - export MAMBA_EXE=$(pwd)/micromamba
  - . $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
  - git submodule update --init --recursive
  - git submodule update --recursive --remote
  - cd xcube
  - micromamba create -y -f environment.yml -c conda-forge
  - micromamba activate xcube
  - python setup.py install

  - micromamba install --channel conda-forge xcube-cci
  - micromamba install -c conda-forge xcube-sh
  - micromamba install --channel conda-forge xcube-cds
  - micromamba install -c conda-forge xcube_geodb
  - cd ..
  - micromamba install -c conda-forge jupyterlab
  - micromamba install -c conda-forge psycopg2
  - micromamba install -c conda-forge cartopy
  - micromamba install -c conda-forge ipython
  - micromamba install -c conda-forge cfgrib

  - list_of_failing_nbs=()
  - directories_with_nbs="*/examples/notebooks xcube/examples/notebooks/datastores \
                          xcube/examples/notebooks/sns_chl_analysis */notebooks"
  - initial_wd=$(pwd)
  - for dir_with_nbs in $directories_with_nbs;
        do
          if [[ -d $dir_with_nbs ]]; then
            for nb in ${dir_with_nbs}/*.ipynb;
              do
                jupyter nbconvert --to python  --ExecutePreprocessor.kernel_name=python3 $nb;
                export VAR=$nb;
                directory=$(dirname "${VAR}");
                filename=$(basename -- "$nb");
                filename="${filename%.*}";
                file="${filename}.py";
                echo "Testing ${file} in directory ${directory}";
                cd "$directory" && ipython "$file" || list_of_failing_nbs+=( "$nb" ) && cd "$initial_wd" && continue;
              done
          fi
        done
  - if [[ ${#list_of_failing_nbs[@]} -eq 0 ]]; then
      echo "Hurray! No jupyter notebooks are failing!";
    else
      echo "The failing notebooks are ${list_of_failing_nbs[@]}, exiting with error.";
      exit 1;
    fi